<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TestAutoCombox">



    <!--#region Colores-->
    <SolidColorBrush Color="#606062" x:Key="GrisSAAM"></SolidColorBrush>
    <SolidColorBrush Color="#004481" x:Key="AzulSAAM"></SolidColorBrush>
    <SolidColorBrush Color="#1FA6A5" x:Key="VerdeSAAM"></SolidColorBrush>
    <SolidColorBrush Color="#FEAA0E" x:Key="NaranjaSAAM"></SolidColorBrush>
    <SolidColorBrush Color="#BFBFBF" x:Key="Linea"></SolidColorBrush>
    <SolidColorBrush Color="#848688" x:Key="CirculosPizarras"></SolidColorBrush>
    <SolidColorBrush Color="#ED3237" x:Key="CirculoPizarrasError"></SolidColorBrush>

    <SolidColorBrush Color="#0F7593" x:Key="EncabezadoSubseccion"></SolidColorBrush>
    <SolidColorBrush Color="#666666" x:Key="Etiquetas"></SolidColorBrush>
    <SolidColorBrush Color="#4B4B4D" x:Key="Titulos"></SolidColorBrush>
    <SolidColorBrush Color="#727376" x:Key="MenuMouseSobre"></SolidColorBrush>
    <SolidColorBrush Color="#AFDBDB" x:Key="TablaVerdeOscuro"></SolidColorBrush>
    <SolidColorBrush Color="#EAF7F7" x:Key="TablaVerdeClaro"></SolidColorBrush>
    <SolidColorBrush Color="#F7EAEA" x:Key="TablaRojo"></SolidColorBrush>
    <!--#endregion-->

    <!--#region Ventana-->
    <Style TargetType="Window" x:Key="VentanaPrincipal">
        <Setter Property="Width" Value="1088"/>
        <Setter Property="Height" Value="612"/>
        <Setter Property="WindowStyle" Value="none"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="BorderBrush" Value="{StaticResource AzulSAAM}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
    </Style>
    <!--#endregion-->

    <!--#region Títulos y texto-->
    <Style TargetType="TextBlock" x:Key="TituloFlujoStyle">
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI" />
        <Setter Property="FontSize" Value="22"/>

        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="SubtituloFlujoStyle">
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI Light"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="AyudaStyle">
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI Light"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="{StaticResource Titulos}"/>
        <Setter Property="Margin" Value="0 5"/>
    </Style>

    <Style TargetType="Label" x:Key="TextoFormularioStyle">
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI Light"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="MaxLength" Value="9"></Setter>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI"/>
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TablaVerdeClaro}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Secciones-->
    <Style TargetType="ListBox" x:Key="lstboxSecciones">
        <Setter Property="Background" Value="{StaticResource GrisSAAM}"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 20 0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="lstBoxItemsStyle" >
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI Light"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="5 5 20 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}" Width="Auto" Padding="10 5" HorizontalAlignment="Left">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value ="{StaticResource MenuMouseSobre}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Botones-->
    <ControlTemplate x:Key="BotonTextoTemplate" TargetType="{x:Type Button}">
        <Border Name="Border" BorderThickness="0" Background="Transparent">
            <ContentPresenter RecognizesAccessKey="True"></ContentPresenter>
        </Border>
    </ControlTemplate>

    <Style x:Key="BotonTextoStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.Template" Value="{StaticResource BotonTextoTemplate}"></Setter>
        <Setter Property="TextBlock.Foreground" Value="{StaticResource Etiquetas}"></Setter>
        <Setter Property="TextBlock.FontSize" Value="16"></Setter>
        <Setter Property="TextBlock.FontFamily" Value="Microsoft JhengHei UI"></Setter>
        <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="{StaticResource VerdeSAAM}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="TextBlock.Foreground" Value="{StaticResource NaranjaSAAM}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BotonHerramientaStyle" TargetType="Button">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>
    <!--#endregion-->

    <!--#region Subsecciones-->
    <Style TargetType="Button" x:Key="SubseccionesStyle">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI Light"/>
        <Setter Property="FontSize" Value="19"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Control.Template" Value="{StaticResource BotonTextoTemplate}"></Setter>
    </Style>
    <!--#endregion-->

    <!--#region Contenido de subsección-->
    <Style TargetType="TabControl" x:Key="SubSeccionContenidoStyle">
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="Border" x:Key="LineaFormularioStyle">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="{StaticResource Linea}"/>
    </Style>

    <!--#endregion-->

    <!--#region Combobox-->
    <ControlTemplate x:Key="CustomToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FFFFFFFF"
                  BorderBrush="{StaticResource Etiquetas}"
                  BorderThickness="0 0 0 0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{StaticResource Titulos}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource CustomToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True"                           
                            Background="#FFFFFFFF"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="#FFFFFFFF"
                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,2,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FFD2EDFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Tablas SAAM-->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <Style x:Key="HeaderTablaStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource TablaVerdeOscuro}"/>
        <Setter Property="FontFamily" Value="Arial Narrow"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0 0 2 0"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Padding" Value="5 2"/>
        <Setter Property="Foreground" Value="{StaticResource GrisSAAM}"/>
    </Style>

    <Style x:Key="FilaSeleccionadaStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="DataGridRow.IsSelected" Value="True"/>
                    <Condition Property="AlternationIndex" Value="0"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource Linea}"/>
                    <Setter Property="BorderThickness" Value="4 2 0 2"/>
                    <Setter Property="Background" Value="White"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="DataGridRow.IsSelected" Value="True"/>
                    <Condition Property="AlternationIndex" Value="1"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource Linea}"/>
                    <Setter Property="BorderThickness" Value="4 2 0 2"/>
                    <Setter Property="Background" Value="{StaticResource TablaVerdeClaro}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CeldaSeleccionadaStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="0"/>
    </Style>

    <Style TargetType="{x:Type DataGrid}" x:Key="TablaSAAMStyle">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="GridLinesVisibility" Value="Vertical"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource TablaVerdeOscuro}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TablaVerdeOscuro}"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="ClipboardCopyMode" Value="None"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="ColumnWidth" Value="Auto"/>
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Setter Property="FontFamily" Value="Arial Narrow"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="RowHeight" Value="18"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource TablaVerdeClaro}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource HeaderTablaStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource FilaSeleccionadaStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource CeldaSeleccionadaStyle}"/>
        <Setter Property="RowHeaderStyle" Value="{StaticResource RowHeaderStyle}"/>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="White"/>
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource TablaVerdeClaro}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region RadioButton-->
    <Color x:Key="ControlPressedColor">Gray</Color>

    <Style TargetType="RadioButton" x:Key="EstyloRB" >
        <Setter Property="Foreground" Value="{StaticResource Titulos}"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI Light"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="10" Height="10">
                                <Ellipse x:Name="Border" StrokeThickness="1" Stroke="{StaticResource Titulos}">
                                    <Ellipse.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                    <GradientStop Color="{DynamicResource ControlMediumColor}"/>
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked" >
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="5 0" 
                            VerticalAlignment="top"
                            HorizontalAlignment="Center"
                            RecognizesAccessKey="True"  />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Expander-->

    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ToogleConImagenStyle">
        <Border Padding="{TemplateBinding Padding}" >
            <Grid Background="Transparent" SnapsToDevicePixels="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <!-- O = Oculto, E = Expandido -->
                    <Image Name="NormalE" Source="/imagenes/Expansores/Contraer-G.png" Height="18"/>
                    <Image Name="OverE" Source="/imagenes/Expansores/Contraer-A.png" Visibility="Hidden" Height="18"/>
                    <Image Name="PressedE" Source="/imagenes/Expansores/Contraer-N.png" Visibility="Hidden" Height="18"/>
                    <Image Name="NormalO" Source="/imagenes/Expansores/Expandir-G.png" Visibility="Hidden" Height="18"/>
                    <Image Name="OverO" Source="/imagenes/Expansores/Expandir-A.png" Visibility="Hidden" Height="18"/>
                    <Image Name="PressedO" Source="/imagenes/Expansores/Expandir-N.png" Visibility="Hidden" Height="18"/>
                </Grid>
                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <!-- NO Expandido -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="NormalO" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="OverO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="NormalE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedE" Property="Visibility" Value="Hidden"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="NormalO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverO" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="PressedO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="NormalE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedE" Property="Visibility" Value="Hidden"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="NormalO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedO" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="NormalE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedE" Property="Visibility" Value="Hidden"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <!-- Expandido -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="NormalO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="NormalE" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="OverE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedE" Property="Visibility" Value="Hidden"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="NormalO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="NormalE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverE" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="PressedE" Property="Visibility" Value="Hidden"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="NormalO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedO" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="NormalE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="OverE" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="PressedE" Property="Visibility" Value="Visible"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ExpanderSAAMSTemplate" TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton" DockPanel.Dock="Top" Template="{StaticResource ToogleConImagenStyle}" Content="{TemplateBinding Header}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True">
            </ToggleButton>
            <ContentPresenter x:Name="ExpanderContent" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Expander}" x:Key="ExpanderSAAMStyle">
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI Light"/>
        <Setter Property="Foreground" Value="{StaticResource Titulos}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template" Value="{StaticResource ExpanderSAAMSTemplate}"/>
    </Style>

    <!--#endregion-->

    <!--#region DatePicker-->
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="100"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                            </Grid.Resources>

                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}" Grid.Row="0">
                                <DatePickerTextBox.Style>
                                    <Style TargetType="DatePickerTextBox">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                                    <Grid>
                                                        <Grid.Resources>
                                                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                                                        </Grid.Resources>
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualStateGroup.Transitions>
                                                                    <VisualTransition GeneratedDuration="0"/>
                                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                                </VisualStateGroup.Transitions>
                                                                <VisualState x:Name="Normal"/>
                                                                <VisualState x:Name="MouseOver" />
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="WatermarkStates">
                                                                <VisualStateGroup.Transitions>
                                                                    <VisualTransition GeneratedDuration="0"/>
                                                                </VisualStateGroup.Transitions>
                                                                <VisualState x:Name="Unwatermarked"/>
                                                                <VisualState x:Name="Watermarked">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="FocusStates">
                                                                <VisualStateGroup.Transitions>
                                                                    <VisualTransition GeneratedDuration="0"/>
                                                                </VisualStateGroup.Transitions>
                                                                <VisualState x:Name="Unfocused"/>
                                                                <VisualState x:Name="Focused" />
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                                                            <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="0"/>
                                                                <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="0">
                                                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                                                </Border>
                                                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                        </Border>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DatePickerTextBox.Style>
                            </DatePickerTextBox>
                            <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Ventana de acceso-->

    <Style TargetType="{x:Type TextBox}" x:Key="AutenticacionStyle">
        <Setter Property="MaxLength" Value="9"></Setter>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI Light"/>
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="5"/>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="PasswordChar" Value="o"/>
        <Setter Property="Foreground" Value="{StaticResource MenuMouseSobre}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TablaVerdeClaro}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Scrollbar-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Visibility="Collapsed" Name="Border" Margin="1" CornerRadius="2" Background="Red" BorderBrush="Red" BorderThickness="1">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Yellow" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="white" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="white"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="#F0F0F0" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb>
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Grid>
                                    <Border x:Name="bor" Background="LightGray" Margin="0,1,0,1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="bor" Property="Background" Value="#77000000"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton  Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0" />
            <RepeatButton  Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb>
                        <Thumb.Template>
                            <ControlTemplate TargetType="Thumb">
                                <Grid>
                                    <Border x:Name="bor" Background="LightGray" Margin="0,1,0,1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="bor" Property="Background" Value="#77000000"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="7" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="7"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Pizarras (TEMPORAL)-->
    <Style TargetType="{x:Type TextBox}" x:Key="TablaResumenStyle">
        <Setter Property="MaxLength" Value="9"></Setter>
        <Setter Property="FontFamily" Value="Microsoft JhengHei UI"/>
        <Setter Property="Foreground" Value="{StaticResource Etiquetas}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>